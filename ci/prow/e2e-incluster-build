#!/usr/bin/env bash

set -euxo pipefail

echo "Deploy KMMO..."
make deploy

echo "Get first node..."
NODE=$(oc get nodes -o jsonpath='{.items..metadata.name}' | awk {'print $1'})

source ./check-kmm-kmod

echo "Label a node to match selector in Module afterwards..."
oc label node $NODE task=kmm-ci

echo "Wait until the KMMO Deployment is Available"
oc wait --for condition=Available --timeout 1m deployments.apps -n kmm-operator-system kmm-operator-controller-manager

echo "Create a build secret..."
oc create secret generic build-secret --from-literal=ci-build-secret=super-secret-value
echo "Add a configmap that contain the kernel module build dockerfile..."
oc apply -f ci/kmm-kmod-dockerfile.yaml

echo "Add an kmm-ci Module that contains a valid mapping..."
sed -e "s/KVER_CHANGEME/$(uname -r)/g" ci/module-kmm-ci-build.template.yaml | tee module-kmm-ci.yaml
oc apply -f module-kmm-ci.yaml

echo "Wait for the job to be created..."
timeout 1m bash -c 'until oc get job -l kmm.node.kubernetes.io/module.name | grep kmm; do sleep 1; done'

echo "Check that the module gets loaded on the node..."
timeout 1m bash -c 'until check_kmm_kmod; do sleep 3; done'

echo "Check that the DriverContainer prints the secret's value to the standard output..."
POD_NAME=$(oc get pod -l kmm.node.kubernetes.io/module.name --template='{{ (index .items 0).metadata.name }}')
KERNEL_VERSION=$(uname -r)
echo "Looking for the build secret"
timeout 1m bash -c "until oc exec $POD_NAME -- grep super-secret-value /ci-build-secret; do sleep 3; done"

echo "Looking for the build argument"
timeout 1m bash -c "until oc exec $POD_NAME -- grep some-build-arg /build-arg; do sleep 3; done"

echo "Looking for the kernel version"
timeout 1m bash -c "until oc exec $POD_NAME -- grep $KERNEL_VERSION /kernel-version; do sleep 3; done"

echo "Looking for the build argument with a default value"
timeout 1m bash -c "until oc exec $POD_NAME -- grep default-value /default-value; do sleep 3; done"

echo "Remove the Module..."
oc delete -f module-kmm-ci.yaml

echo "Check that the module gets unloaded from the node..."
timeout 1m bash -c 'until ! check_kmm_kmod; do sleep 3; done'

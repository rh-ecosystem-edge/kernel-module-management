#!/usr/bin/env bash

set -euxo pipefail

POD_NAME=''

wait_for_pod_and_print_logs () {
  # we can't exec a command nor get the logs on a pod that isn't `Running` yet.
  oc wait "pod/${POD_NAME}" --for jsonpath='{.status.phase}'=Running --timeout=60s

  echo "Print pod ${POD_NAME} logs..."
  oc logs "pod/${POD_NAME}" -f
}

check_module_not_loaded () {
  local module_name="$1"

  echo "Check that the ${module_name} module is not loaded on the node..."
  if oc debug node/${NODE} -- chroot host/ lsmod | grep "$module_name"; then
    echo "Unexpected lsmod output - ${module_name} is loaded on the node"
    return 1
  fi
}

echo "Get first node and the kernel version..."
export NODE=$(oc get nodes -l node-role.kubernetes.io/worker -o jsonpath='{.items[0].metadata.name}')
export KVER=$(oc debug node/${NODE} -- uname -r)

echo "Label a node to match selector in Module afterwards..."
oc label node ${NODE} task=kmm-ci

check_module_not_loaded "kmm_ci_a"
check_module_not_loaded "kmm_ci_b"

echo "Load the dummy module to be removed by the worker Pod before loading kmm-ci"
oc debug "node/${NODE}" -- chroot host/ sudo modprobe dummy

echo "Verify that dummy is loaded"
oc debug "node/${NODE}" -- chroot host/ lsmod | grep dummy

oc wait --for=condition=Available deployment/kmm-operator-controller deployment/kmm-operator-webhook-server -n openshift-kmm

echo "Add resources"
oc apply -k ci/e2e

# Wait for the build pod to be created. `kubectl wait` doesn't support such option,
# see https://github.com/kubernetes/kubernetes/issues/83242.
echo "Waiting for the build pod to be created..."
timeout 1m bash -c 'until oc get pods -o json | jq -er ".items[].metadata.name | select(.? | match(\"build\"))"; do sleep 1; done'
POD_NAME=$(oc get pods -o json | jq -r '.items[].metadata.name | select(.? | match("build"))')

wait_for_pod_and_print_logs

echo "Waiting for the signing pod to be created..."
timeout 1m bash -c 'until oc get pods -o json | jq -er ".items[].metadata.name | select(.? | match(\"sign\"))"; do sleep 1; done'
POD_NAME=$(oc get pods -o json | jq -r '.items[].metadata.name | select(.? | match("sign"))')

wait_for_pod_and_print_logs

echo "Check that the module gets loaded on the node..."
timeout 10m bash -c 'until oc debug node/${NODE} -- chroot host/ lsmod | grep kmm_ci_a; do sleep 3; done'

echo "Check that the dependent module gets loaded on the node..."
oc debug "node/${NODE}" -- chroot host/ lsmod | grep kmm_ci_b

check_module_not_loaded "dummy"

echo "Remove the Module..."
oc delete modules.kmm.sigs.x-k8s.io/kmm-ci --wait=false

echo "Check that the module gets unloaded from the node..."
timeout 1m bash -c 'until ! oc debug node/${NODE} -- chroot host/ lsmod | grep kmm_ci_a; do sleep 3; done'

echo "Check that the dependent module is also unloaded from the node..."
check_module_not_loaded "kmm_ci_b"

echo "Wait for the Module to be deleted..."
oc wait --for delete modules.kmm.sigs.x-k8s.io/kmm-ci

// Code generated by MockGen. DO NOT EDIT.
// Source: helper.go

// Package build is a generated GoMock package.
package build

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/openshift/api/build/v1"
	api "github.com/rh-ecosystem-edge/kernel-module-management/internal/api"
)

// MockOpenShiftBuildsHelper is a mock of OpenShiftBuildsHelper interface.
type MockOpenShiftBuildsHelper struct {
	ctrl     *gomock.Controller
	recorder *MockOpenShiftBuildsHelperMockRecorder
}

// MockOpenShiftBuildsHelperMockRecorder is the mock recorder for MockOpenShiftBuildsHelper.
type MockOpenShiftBuildsHelperMockRecorder struct {
	mock *MockOpenShiftBuildsHelper
}

// NewMockOpenShiftBuildsHelper creates a new mock instance.
func NewMockOpenShiftBuildsHelper(ctrl *gomock.Controller) *MockOpenShiftBuildsHelper {
	mock := &MockOpenShiftBuildsHelper{ctrl: ctrl}
	mock.recorder = &MockOpenShiftBuildsHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpenShiftBuildsHelper) EXPECT() *MockOpenShiftBuildsHelperMockRecorder {
	return m.recorder
}

// DeleteBuild mocks base method.
func (m *MockOpenShiftBuildsHelper) DeleteBuild(ctx context.Context, build *v1.Build) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBuild", ctx, build)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBuild indicates an expected call of DeleteBuild.
func (mr *MockOpenShiftBuildsHelperMockRecorder) DeleteBuild(ctx, build interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBuild", reflect.TypeOf((*MockOpenShiftBuildsHelper)(nil).DeleteBuild), ctx, build)
}

// GetModuleBuildByKernel mocks base method.
func (m *MockOpenShiftBuildsHelper) GetModuleBuildByKernel(ctx context.Context, mld *api.ModuleLoaderData) (*v1.Build, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModuleBuildByKernel", ctx, mld)
	ret0, _ := ret[0].(*v1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetModuleBuildByKernel indicates an expected call of GetModuleBuildByKernel.
func (mr *MockOpenShiftBuildsHelperMockRecorder) GetModuleBuildByKernel(ctx, mld interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleBuildByKernel", reflect.TypeOf((*MockOpenShiftBuildsHelper)(nil).GetModuleBuildByKernel), ctx, mld)
}

// GetModuleBuilds mocks base method.
func (m *MockOpenShiftBuildsHelper) GetModuleBuilds(ctx context.Context, moduleName, moduleNamespace string) ([]v1.Build, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModuleBuilds", ctx, moduleName, moduleNamespace)
	ret0, _ := ret[0].([]v1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetModuleBuilds indicates an expected call of GetModuleBuilds.
func (mr *MockOpenShiftBuildsHelperMockRecorder) GetModuleBuilds(ctx, moduleName, moduleNamespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleBuilds", reflect.TypeOf((*MockOpenShiftBuildsHelper)(nil).GetModuleBuilds), ctx, moduleName, moduleNamespace)
}

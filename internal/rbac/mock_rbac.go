// Code generated by MockGen. DO NOT EDIT.
// Source: rbac.go

// Package rbac is a generated GoMock package.
package rbac

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/rh-ecosystem-edge/kernel-module-management/api/v1beta1"
)

// MockRBACCreator is a mock of RBACCreator interface.
type MockRBACCreator struct {
	ctrl     *gomock.Controller
	recorder *MockRBACCreatorMockRecorder
}

// MockRBACCreatorMockRecorder is the mock recorder for MockRBACCreator.
type MockRBACCreatorMockRecorder struct {
	mock *MockRBACCreator
}

// NewMockRBACCreator creates a new mock instance.
func NewMockRBACCreator(ctrl *gomock.Controller) *MockRBACCreator {
	mock := &MockRBACCreator{ctrl: ctrl}
	mock.recorder = &MockRBACCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRBACCreator) EXPECT() *MockRBACCreatorMockRecorder {
	return m.recorder
}

// CreateDevicePluginRBAC mocks base method.
func (m *MockRBACCreator) CreateDevicePluginRBAC(ctx context.Context, mod v1beta1.Module) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDevicePluginRBAC", ctx, mod)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDevicePluginRBAC indicates an expected call of CreateDevicePluginRBAC.
func (mr *MockRBACCreatorMockRecorder) CreateDevicePluginRBAC(ctx, mod interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDevicePluginRBAC", reflect.TypeOf((*MockRBACCreator)(nil).CreateDevicePluginRBAC), ctx, mod)
}

// CreateModuleLoaderRBAC mocks base method.
func (m *MockRBACCreator) CreateModuleLoaderRBAC(ctx context.Context, mod v1beta1.Module) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateModuleLoaderRBAC", ctx, mod)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateModuleLoaderRBAC indicates an expected call of CreateModuleLoaderRBAC.
func (mr *MockRBACCreatorMockRecorder) CreateModuleLoaderRBAC(ctx, mod interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateModuleLoaderRBAC", reflect.TypeOf((*MockRBACCreator)(nil).CreateModuleLoaderRBAC), ctx, mod)
}

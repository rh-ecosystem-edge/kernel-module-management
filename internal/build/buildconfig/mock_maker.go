// Code generated by MockGen. DO NOT EDIT.
// Source: maker.go

// Package buildconfig is a generated GoMock package.
package buildconfig

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/openshift/api/build/v1"
	v1beta1 "github.com/rh-ecosystem-edge/kernel-module-management/api/v1beta1"
)

// MockMaker is a mock of Maker interface.
type MockMaker struct {
	ctrl     *gomock.Controller
	recorder *MockMakerMockRecorder
}

// MockMakerMockRecorder is the mock recorder for MockMaker.
type MockMakerMockRecorder struct {
	mock *MockMaker
}

// NewMockMaker creates a new mock instance.
func NewMockMaker(ctrl *gomock.Controller) *MockMaker {
	mock := &MockMaker{ctrl: ctrl}
	mock.recorder = &MockMakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMaker) EXPECT() *MockMakerMockRecorder {
	return m.recorder
}

// MakeBuildConfig mocks base method.
func (m *MockMaker) MakeBuildConfig(mod v1beta1.Module, mapping v1beta1.KernelMapping, targetKernel, containerImage string) (*v1.BuildConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeBuildConfig", mod, mapping, targetKernel, containerImage)
	ret0, _ := ret[0].(*v1.BuildConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeBuildConfig indicates an expected call of MakeBuildConfig.
func (mr *MockMakerMockRecorder) MakeBuildConfig(mod, mapping, targetKernel, containerImage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeBuildConfig", reflect.TypeOf((*MockMaker)(nil).MakeBuildConfig), mod, mapping, targetKernel, containerImage)
}
